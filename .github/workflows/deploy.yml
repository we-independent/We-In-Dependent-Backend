name: Deploy with Semantic Versioning

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write   # Needed for pushing tags and creating releases

env:
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/weindependent

jobs:
  deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: deploy-backend
      cancel-in-progress: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0   # Needed for full tag history

      # Step 1: Determine next version
      - name: Get Next Version
        id: version
        uses: anothrNick/github-tag-action@1.73.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true               # Prefix tag with 'v'
          DEFAULT_BUMP: patch        # Default to patch bump
          RELEASE_BRANCHES: main
        # Auto-detects bump level:
        #   - Commit starts with 'feat' → minor
        #   - Commit starts with 'fix' → patch
        #   - Commit starts with 'BREAKING CHANGE' → major

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Build and push Docker image
      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}:backend-${{ steps.version.outputs.new_tag }}

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          command_timeout: 30m
          script: |
            APP_DIR="$HOME/We-In-Dependent-Backend"
            REPO="https://github.com/we-independent/We-In-Dependent-Backend.git"

            if [ ! -d "$APP_DIR" ]; then
              echo "[+] Directory does not exist. Cloning fresh repository..."
              git clone $REPO $APP_DIR
            else
              echo "[+] Pulling latest changes..."
              git -C $APP_DIR fetch origin
              git -C $APP_DIR reset --hard origin/main
            fi

            echo "[+] Logging into Docker Hub"
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

            echo "[+] Running deployment script"
            chmod +x $APP_DIR/.github/workflows/deploy.sh
            $APP_DIR/.github/workflows/deploy.sh ${{ env.IMAGE_NAME }}:backend-${{ steps.version.outputs.new_tag }}

      # Step 5: Generate changelog
      - name: Generate Changelog
        id: changelog
        run: |
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          echo "[+] Previous tag: $PREV_TAG"
          if [ -z "$PREV_TAG" ]; then
            LOG=$(git log --pretty=format:"- %s (%h)")
          else
            LOG=$(git log --pretty=format:"- %s (%h)" $PREV_TAG..HEAD)
          fi
          echo "LOG<<EOF" >> $GITHUB_ENV
          echo "$LOG" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      # Step 6: Create GitHub Release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.new_tag }}
          name: "Release ${{ steps.version.outputs.new_tag }}"
          body: |
            ✅ Deployment Completed  
            **Version:** ${{ steps.version.outputs.new_tag }}
            **Triggered by:** ${{ github.actor }}

            ### Changes:
            ${{ env.LOG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
