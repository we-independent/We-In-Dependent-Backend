<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.weindependent.app.database.mapper.weindependent.BlogArticleListMapper">
    
    <resultMap type="com.weindependent.app.database.dataobject.BlogArticleListDO" id="BlogArticleListResult">
        <result property="id" column="id" />
        <result property="articleSourceType" column="article_source_type" />
        <result property="sourceUrl" column="source_url" />
        <result property="authorId" column="author_id" />
        <result property="bannerImgId" column="banner_img_id" />
        <result property="summary" column="summary" />
        <result property="title" column="title" />
        <result property="content" column="content" />
        <result property="articleStatus" column="article_status" />
        <result property="categoryId" column="category_id" />
        <result property="isDeleted" column="is_deleted" />
        <result property="createUserId" column="create_user_id" />
        <result property="createTime" column="create_time" />
        <result property="updateUserId" column="update_user_id" />
        <result property="updateTime" column="update_time" />
    </resultMap>

    <sql id="selectBlogArticleVo">
        select id, article_source_type, source_url, author_id, banner_img_id, summary, title, content, article_status, category_id, is_deleted, create_user_id, create_time, update_user_id, update_time 
        from blog_article
    </sql>

    <select id="selectBlogArticleList" 
            parameterType="com.weindependent.app.dto.BlogArticleListQry" 
            resultMap="BlogArticleListResult">
        <include refid="selectBlogArticleVo"/>
        <where>
            <!-- 只保留按分类筛选的条件 -->
            <if test="categoryId != null">
                and category_id = #{categoryId}
            </if>
        </where>
        ORDER BY ${orderClause}
    </select>
    
    <select id="selectBlogArticleById" parameterType="int" resultType="com.weindependent.app.database.dataobject.BlogArticleListDO">
        SELECT * FROM blog_article WHERE id = #{id} AND is_deleted = 0
    </select>

    <select id="selectCommentsByArticleId" parameterType="int" resultType="com.weindependent.app.database.dataobject.BlogCommentDO">
        SELECT id, comment_author_user_id AS user_id, article_id, content, create_time, parent_comment_id
        FROM blog_comment
        WHERE article_id = #{articleId} AND is_deleted = 0
        ORDER BY create_time ASC
    </select>

    <select id="selectTagsByArticleId" resultType="string" parameterType="int">
        SELECT t.name
        FROM tag_article_relation r
        LEFT JOIN tag t ON r.tag_id = t.id
        WHERE r.article_id = #{articleId}    
    </select>

    <select id="selectBannerImageUrlById" resultType="string" parameterType="int">
        SELECT file_path FROM blog_image WHERE id = #{imgId}
    </select>

    <select id="getArticlesByCategoryOrTagsExcludeSelf"
            resultType="com.weindependent.app.dto.BlogArticleCardQry"
            parameterType="map">
        SELECT 
            a.id,
            a.title,
            a.update_time AS time,
            a.category_id AS category,
            c.name AS categoryName,
            'We Independent' AS author,
            i.file_path AS imageUrl,
            NULL AS readingTime,
            NULL AS editorsPick,
            (SELECT COUNT(*) FROM save_list_article WHERE article_id = a.id) AS savedCount
        FROM blog_article a
        LEFT JOIN category c ON a.category_id = c.id
        LEFT JOIN blog_image i ON a.banner_img_id = i.id
        WHERE a.is_deleted = 0
        AND a.article_status = 'published'
        AND a.id != #{excludeArticleId}
        AND (
                a.category_id = #{categoryId}
                <if test="tagIdList != null and tagIdList.size > 0">
                OR a.id IN (
                    SELECT article_id FROM tag_article_relation
                    WHERE is_deleted = 0
                        AND tag_id IN
                        <foreach collection="tagIdList" item="tagId" open="(" separator="," close=")">
                            #{tagId}
                        </foreach>
                )
                </if>
        )
        ORDER BY a.update_time DESC
        LIMIT 10
    </select>

</mapper>
