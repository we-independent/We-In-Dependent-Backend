<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.weindependent.app.database.mapper.weindependent.EventMapper">
    <select id="getRecent" parameterType="map" resultType="com.weindependent.app.vo.event.RecentEventVO">
        SELECT
            e.id,
            e.title,
            e.summary,
            e.event_time,
            f.file_path AS bannerUrl,
            CASE WHEN b.user_id IS NOT NULL THEN true ELSE false END AS isBookMarked
        FROM event e
                 LEFT JOIN event_image f ON e.banner_id = f.id
                 LEFT JOIN event_user_bookmark b ON e.id = b.event_id AND b.user_id = #{userId}
        WHERE e.is_deleted = 0
        ORDER BY e.event_time DESC
        LIMIT #{size} OFFSET #{offset}
    </select>

    <select id="getById" parameterType="map" resultType="com.weindependent.app.vo.event.EventVO">
        SELECT e.id,
               e.title,
               e.content,
               e.event_time,
               e.location,
               e.banner_id,
               e.link,
               e.category_id,
               c.name                                                   AS categoryName,
               f.file_path                                              AS bannerUrl,
               u.id                                                     AS speakerId,
               u.real_name                                              AS speakerName,
               CASE WHEN b.user_id IS NOT NULL THEN true ELSE false END AS isBookMarked
        FROM event e
                 LEFT JOIN t_system_user u ON e.speaker_user_id = u.id
                 LEFT JOIN event_image f ON e.banner_id = f.id
                 LEFT JOIN event_user_bookmark b ON e.id = b.event_id AND b.user_id = #{userId}
                 LEFT JOIN category c on e.category_id = c.id
        WHERE e.id = #{id}
          AND e.is_deleted = 0
    </select>

    <insert id="register">
        INSERT INTO event_user_register (event_id, user_id)
        VALUES (#{id}, #{userId})
    </insert>

    <delete id="unregister">
        DELETE FROM event_user_register
        WHERE event_id = #{id} AND user_id = #{userId}
    </delete>

    <insert id="bookmark">
        INSERT INTO event_user_bookmark (event_id, user_id)
        VALUES (#{id}, #{userId})
    </insert>

    <delete id="unbookmark">
        DELETE FROM event_user_bookmark
        WHERE event_id = #{id} AND user_id = #{userId}
    </delete>

</mapper>